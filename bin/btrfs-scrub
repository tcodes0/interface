#! /usr/bin/env bash
# Copyright 2024 Raphael Thomazella. All rights reserved.
# Use of this source code is governed by the BSD-3-Clause
# license that can be found in the LICENSE file and online
# at https://opensource.org/license/BSD-3-clause.

set -euo pipefail
shopt -s globstar
trap 'err $LINENO' ERR

### vars and functions ###

target=""
cancel=""
readonly volumes=(Archlinux Data2TB Data4TB)

help_exit() {
  msgln "Usage: $0 [cancel] <volume>"
  msgln "Known volumes: ${volumes[*]}"
  exit 1
}

check_dependencies() {
  if [ -z "$BASH_ENV" ]; then
    echo "This script uses functions defined externally."
    echo "\$BASH_ENV is used to source dependencies, and is empty."
    echo "If functions are in the environment, please set BASH_ENV to any string."
    exit 1
  fi
}

### script ###

check_dependencies

if requested_help; then
  help_exit
fi

if [ "$1" = "cancel" ]; then
  cancel="true"
  shift
fi

case "$1" in
"${volumes[0]}") target="/" ;;
"${volumes[1]}") target="/media/data" ;;
"${volumes[2]}") target="/media/data4tb" ;;
esac

#  if target is not data2TB or archlinux
if [ ! "$target" ]; then
  msgln "Unknown volume: $1, edit script to add it"
  msgln "Known volumes: ${volumes[*]}"
  help_exit
fi

#  grep mounts to check if target is mounted
if ! grep -qs "$target" /proc/mounts; then
  msgln "$target is not mounted"
  help_exit
fi

msgln "Scrub requires sudo"
sudo true

# if cancel is true, cancel scrub
if [ "$cancel" = "true" ]; then
  sudo btrfs scrub cancel $target
else
  sudo btrfs scrub start $target
fi
