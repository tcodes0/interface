#! /usr/bin/env bash
# Copyright 2024 Raphael Thomazella. All rights reserved.
# Use of this source code is governed by the BSD-3-Clause
# license that can be found in the LICENSE file and online
# at https://opensource.org/license/BSD-3-clause.

set -euo pipefail
shopt -s globstar
trap 'err $LINENO' ERR

### vars and functions ###

dryrun=""

check_dependencies() {
  if [ -z "$BASH_ENV" ]; then
    echo "This script uses functions defined externally."
    echo "\$BASH_ENV is used to source dependencies, and is empty."
    echo "If functions are in the environment, please set BASH_ENV to any string."
    exit 1
  fi
}

help_exit() {
  msgln "usage: snapshot.sh [-n|--dry-run]"
  msgln "this is an interactive script, use -n or --dry-run to experiment"
  msgln "run without dry-run flags to make snapshots"
  msgln "- choose subvolume to snapshot from /toplevel, we'll list the options"
  msgln "- choose snapshot name, default to \$name-\${todays_date}"
  msgln "- choose read-only or read-write, default is read-write"
  exit 1
}

### script ###

check_dependencies

if requested_help "$*"; then
  help_exit
fi

if [ "${1:-}" = "-n" ] || [ "${1:-}" = "--dry-run" ]; then
  dryrun="true"
fi

if [ -n "$dryrun" ]; then
  msgln "dry run..."
  msgln
fi

msgln "subvolumes in /toplevel owned by you ($(whoami)):"
msgln

find /toplevel -maxdepth 1 -user "$(whoami)"

msgln
msgln "snapshot source:"

response=""
read -r response

if [ ! "$response" ] || [ ! -d "/toplevel/$response" ]; then
  msgln "error: /toplevel/$response is not a valid subvolume"
  exit 1
fi

source="$response"
source_no_trailing="${response%%-*}"

msgln
msgln "read-write? (y/N) Default read-only:"

read -r response

readonly="-r"
if [ -n "$response" ] && [ "$response" != "n" ] && [ "$response" != "N" ]; then
  readonly=""
fi

today="$(date +%Y-%m-%d)"
default_name="$source_no_trailing-$today"

if [ -n "$readonly" ]; then
  default_name="$default_name-ro"
fi

msgln
msgln "snapshot name, default $default_name:"

read -r response

destination=""
if [ -z "$response" ]; then
  destination="$default_name"
else
  destination="$response"
fi

if [ -n "$dryrun" ]; then
  msgln would run: btrfs subvolume snapshot $readonly "/toplevel/$source" "/toplevel/$destination"
  exit 0
fi

btrfs subvolume snapshot $readonly "/toplevel/$source" "/toplevel/$destination"
